version: "3.8"

services:
  sqlserver-container:
    container_name: sqlserver-container
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=Admin@1234
    ports:
      - "1433:1433"
    volumes:
      - sqlserver-data:/var/opt/mssql
    networks:
      - zumzum-food-network
      
  mysql8-container:
    container_name: mysql8-container
    image: mysql:8.2.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: Abc12345@#
      MYSQL_DATABASE: ZumZumFood
    ports:
      - 3307:3306
    networks:
      - zumzum-food-network

  phpmyadmin8-container:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin8-container
    restart: always
    depends_on:
      - mysql8-container
    ports:
      - "8100:80"
    environment:
      PMA_HOST: mysql8-container
    networks:
      - zumzum-food-network

  redis-container:
    image: docker.io/redis:7.2.3
    container_name: redis-container
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - zumzum-food-network
  
  redis_insight:
    image: redislabs/redisinsight:1.14.0
    container_name: redis_insight
    restart: always
    ports:
      - 8001:8001
    volumes:
      - redis_insight_volume_data:/db

  rabbitmq-container:
    image: rabbitmq:3.12-management
    container_name: rabbitmq-container
    restart: always
    ports:
      - "5672:5672" # Port cho giao thức AMQP
      - "15672:15672" # Port cho RabbitMQ Management UI
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - zumzum-food-network

  zumzum-food-container:
    container_name: zumzum-food-container
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - MSSQL_SA_PASSWORD=Admin@1234
    ports:
      - "8080:8080"
    depends_on:
      - sqlserver-container
    networks:
      - zumzum-food-network

volumes:
  redis-data:
    driver: local
  redis_insight:
    driver: local
  rabbitmq-data:
    driver: local
  sqlserver-data:
    driver: local

networks:
  zumzum-food-network:
    name: zumzum-food-network
    driver: bridge
    external: true
# docker-compose -f ./deployment.yaml down
# docker-compose -f ./deployment.yaml up -d

# kiểm tra xem có container nào sử dụng network không
# docker network inspect zumzum-food-network
# docker network create zumzum-food-network

# tạo image sqlserver
# docker-compose -f ./deployment.yaml rm -s -f sqlserver-container
# docker-compose -f ./deployment.yaml up -d sqlserver-container

# tạo mysql
# docker-compose -f ./deployment.yaml rm -s -f mysql8-container
# docker-compose -f ./deployment.yaml up -d mysql8-container

# tạo phpmyadmin
# docker-compose -f ./deployment.yaml rm -s -f phpmyadmin8-container
# docker-compose -f ./deployment.yaml up -d phpmyadmin8-container

# tạo image redis
# docker-compose -f ./deployment.yaml rm -s -f redis-container
# docker-compose -f ./deployment.yaml up -d redis-container


# tạo image redis_insight
# docker-compose -f ./deployment.yaml rm -s -f redis_insight
# docker-compose -f ./deployment.yaml up -d redis_insight

# tạo image rabbitmq
# docker-compose -f ./deployment.yaml rm -s -f rabbitmq-container
# docker-compose -f ./deployment.yaml up -d rabbitmq-container

# tạo image docker zumzum-food-container
# docker-compose -f ./deployment.yaml rm -s -f zumzum-food-container
# docker-compose -f ./deployment.yaml up -d zumzum-food-container

# kiểm tra network
# docker network ls
# docker network inspect 07e49996e124
